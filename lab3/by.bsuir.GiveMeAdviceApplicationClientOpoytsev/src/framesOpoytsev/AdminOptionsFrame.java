/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package framesOpoytsev;

import java.awt.Image;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import remoteOpoytsev.MyRemote;

/**
 *
 * @author макс
 */
public class AdminOptionsFrame extends javax.swing.JFrame {

    protected DefaultTableModel dtm = new DefaultTableModel();
    protected static DefaultTableModel dtmodel;

    /**
     * Creates new form AdminOptionsFrame
     */
    public DefaultTableModel init() throws RemoteException, NotBoundException, SQLException {
        Registry registry = LocateRegistry.getRegistry("localhost", 1112);
        MyRemote remoteObject = (MyRemote) registry
                .lookup("RemoteObject");
        dtm = remoteObject.getBlocked();
        dtmodel = dtm;
        int size = dtm.getRowCount();
        String main = new String();
        main = "Заблокированные пользователи:\n\n";
        if (size != 0) {
            for (int i = 0; i < size; i++) {
                main += (dtm.getValueAt(i, 0).toString() + "  " + dtm.getValueAt(i, 1).toString() + "\n");
            }
            users.setText(main);
        } else {
            users.setText("Нет блокированных пользователей");
        }
        return dtm;
    }

    public AdminOptionsFrame() throws RemoteException, NotBoundException, SQLException {
        initComponents();
         setTitle("Give Me Advice Application | Админ");
        Image image = new ImageIcon("ico.png").getImage();
        setIconImage(image);
        setResizable(false);
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        users = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        unblocked = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        jButton1.setBackground(new java.awt.Color(51, 51, 51));
        jButton1.setFont(new java.awt.Font("Chiller", 0, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Изменить пароль");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        users.setColumns(20);
        users.setRows(5);
        jScrollPane1.setViewportView(users);

        jLabel1.setFont(new java.awt.Font("Chiller", 0, 18)); // NOI18N
        jLabel1.setText("Разблокировать пользователя( ID)");

        unblocked.setBackground(new java.awt.Color(51, 51, 51));
        unblocked.setFont(new java.awt.Font("Chiller", 0, 18)); // NOI18N
        unblocked.setForeground(new java.awt.Color(255, 255, 255));
        unblocked.setText("Снять блокировку");
        unblocked.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unblockedActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(51, 51, 51));
        jButton2.setFont(new java.awt.Font("Chiller", 0, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Закрыть");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 439, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(unblocked, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(unblocked))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        new OptionsFrame("admin").setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        users.setText("");
        id.setText("");
        setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void unblockedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unblockedActionPerformed
        // TODO add your handling code here:
        int ID = Integer.parseInt(id.getText());
        boolean is = false;
        for (int i = 0; i < dtmodel.getRowCount(); i++) {
            if (ID == Integer.parseInt(dtmodel.getValueAt(i, 0).toString())) {
                is = true;
            }
        }
        if (is) {
            try {
                Registry registry = LocateRegistry.getRegistry("localhost", 1112);
                MyRemote remoteObject = (MyRemote) registry
                        .lookup("RemoteObject");
                remoteObject.blockingUser(ID, false);
                id.setText("");
                init();
            } catch (RemoteException ex) {
                Logger.getLogger(AdminOptionsFrame.class.getName()).log(Level.SEVERE, null, ex);
            } catch (NotBoundException ex) {
                Logger.getLogger(AdminOptionsFrame.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(AdminOptionsFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            id.setText("");

            JOptionPane.showMessageDialog(this,
                    "Данный пользователь не блокирован", "Ошибка!",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_unblockedActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField id;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton unblocked;
    private javax.swing.JTextArea users;
    // End of variables declaration//GEN-END:variables

}
